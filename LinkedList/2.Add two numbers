/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode res1=new ListNode(0);
        ListNode res=res1;
        int carry=0,sum=0;
        while(l1!=null && l2!=null){
            sum=l1.val+l2.val+carry;
            carry=sum/10;
            int add=sum%10;
            l1=l1.next;
            l2=l2.next;
            ListNode temp=new ListNode(add);
            res.next=temp;
            res=res.next;
        }

        while(l1!=null){
           sum=l1.val+carry;
           carry=sum/10;
           ListNode temp=new ListNode(sum%10);
            res.next=temp;
            res=res.next;
            l1=l1.next;
        }

        while(l2!=null){
           sum=l2.val+carry;
           carry=sum/10;
           ListNode temp=new ListNode(sum%10);
            res.next=temp;
            res=res.next;
            l2=l2.next;
        }
        if(carry>0){
            ListNode temp=new ListNode(carry);
            res.next=temp;
            res=res.next;
        }
        ListNode result=res1.next;
        res1.next=null;
        return result;
    }
}
